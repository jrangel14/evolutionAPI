# render.yaml para desplegar Evolution API con Postgres + Redis en Render

services:
  # Servicio para la API Evolution
  - type: web
    name: evolution-api
    env: docker
    # Si ya tienes Dockerfile en tu repo, Render lo usará para construir
    rootDir: .        # carpeta donde está Dockerfile
    plan: standard     # usar un plan más robusto para producción; starter si es prueba
    region: oregon     # ajusta a tu región más cercana / la que prefieras
    buildCommand: docker build . -t evolution-api
    startCommand: docker run --rm -p 10000:8080 evolution-api  # Esta línea puede variar: si usas `image:` en Render, usas otro approach
    envVars:
      - key: AUTHENTICATION_API_KEY
        sync: false
      - key: DATABASE_ENABLED
        value: "true"
      - key: DATABASE_PROVIDER
        value: "postgresql"
      - key: DATABASE_CONNECTION_URI
        fromDatabase:
          name: evolutiondb
          property: connectionString
      - key: DATABASE_CONNECTION_CLIENT_NAME
        value: evolution_exchange
      - key: DATABASE_SAVE_DATA_INSTANCE
        value: "true"
      - key: DATABASE_SAVE_DATA_NEW_MESSAGE
        value: "true"
      - key: DATABASE_SAVE_MESSAGE_UPDATE
        value: "true"
      - key: DATABASE_SAVE_DATA_CONTACTS
        value: "true"
      - key: DATABASE_SAVE_DATA_CHATS
        value: "true"
      - key: DATABASE_SAVE_DATA_LABELS
        value: "true"
      - key: DATABASE_SAVE_DATA_HISTORIC
        value: "true"
      - key: CACHE_REDIS_ENABLED
        value: "true"
      - key: CACHE_REDIS_URI
        fromService:
          type: keyvalue
          name: evolution-redis
          property: connectionString
      - key: CACHE_REDIS_PREFIX_KEY
        value: evolution
      - key: CACHE_REDIS_SAVE_INSTANCES
        value: "false"
      - key: CACHE_LOCAL_ENABLED
        value: "false"
      - key: CONFIG_SESSION_PHONE_VERSION
        value: "2.3000.1023204200"
    dependsOn:
      - evolutiondb
      - evolution-redis
    # Health check opcional, si tu imagen lo soporta
    healthCheckPath: /health  # ajustar si tu API tiene un endpoint de salud

  # Servicio Redis (Key-Value) gestionado por Render
  - type: keyvalue
    name: evolution-redis
    plan: starter     # puedes usar plan más grande si necesitas más memoria / rendimiento
    region: oregon    # misma región que la API y la DB para evitar latencia

databases:
  - name: evolutiondb
    plan: starter     # plan de postgres gestionado
    region: oregon

# Opcional: grupos de variables de entorno si tienes muchas que repetir
envVarGroups:
  - name: common-evolution
    envVars:
      - key: DATABASE_PROVIDER
        value: postgresql
      - key: AUTHENTICATION_API_KEY
        sync: false
      # puedes incluir otras que sean compartidas entre servicios, aunque aquí sólo la API lo usa

# Previews (ambientes de PR u otras ramas) opcional
previews:
  generation: automatic
